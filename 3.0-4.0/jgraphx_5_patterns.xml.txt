(Block(statements(ExpressionStatement(expression(Assignment(leftHandSide(SimpleName(identifier(*fromConstraint))))(operator(*=))(rightHandSide(ClassInstanceCreation(type(SimpleType(name(SimpleName(identifier(*mxPoint))))))(arguments(NumberLiteral(token(*0)))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(SimpleName(identifier(*start)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(NumberLiteral(token(*0)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*h)))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*mxGraphMlData))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*data))))(initializer(ClassInstanceCreation(type(SimpleType(name(SimpleName(identifier(*mxGraphMlData)))))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*log))))(name(SimpleName(identifier(*log))))(arguments(QualifiedName(qualifier(SimpleName(identifier(*Level))))(name(SimpleName(identifier(*FINEST)))))(SimpleName(identifier(*e)))))))))
(Block(statements(ExpressionStatement(expression(Assignment(leftHandSide(SimpleName(identifier(*geo))))(operator(*=))(rightHandSide(CastExpression(type(SimpleType(name(SimpleName(identifier(*mxGeometry))))))(expression(MethodInvocation(expression(SimpleName(identifier(*geo))))(name(SimpleName(identifier(*clone)))))))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*geo))))(name(SimpleName(identifier(*translate)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*addTopmostVerticesAndEdges))))(arguments(MethodInvocation(name(SimpleName(identifier(*getCell)))))(SimpleName(identifier(*cells)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*begin)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*moveTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*lineTo)))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*String))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*key)))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*String))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*style)))))))))
(Block(statements(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*int))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*start)))))))(IfStatement(expression(MethodInvocation(expression(SimpleName(identifier(*mxUtils))))(name(SimpleName(identifier(*isTrue))))(arguments(MethodInvocation(name(SimpleName(identifier(*getStyle)))))(QualifiedName(qualifier(SimpleName(identifier(*mxConstants))))(name(SimpleName(identifier(*STYLE_HORIZONTAL)))))(BooleanLiteral(booleanValue(*true)))))))))
(Block(statements(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*double))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*previousScale))))(initializer(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getScale)))))))))(TryStatement(body(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))))))))(finally(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(SimpleName(identifier(*previousScale)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))(arguments(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*x)))))(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*y)))))))))))))))
(Block(statements(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*double))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*previousScale))))(initializer(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getScale)))))))))(TryStatement(body(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(MethodInvocation(name(SimpleName(identifier(*getScale))))))))))))(finally(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(SimpleName(identifier(*previousScale)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))(arguments(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*x)))))(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*y)))))))))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*mxPoint))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*previousTranslate))))(initializer(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getTranslate)))))))))(TryStatement(body(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))))))))(finally(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(SimpleName(identifier(*previousScale)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate)))))))))))))
(Block(statements(ExpressionStatement(expression(Assignment(leftHandSide(SimpleName(identifier(*fromConstraint))))(operator(*=))(rightHandSide(ClassInstanceCreation(type(SimpleType(name(SimpleName(identifier(*mxPoint))))))(arguments(NumberLiteral(token(*1)))))))))))
(MethodDeclaration(name(SimpleName(identifier(*getId))))(body(Block(statements(ReturnStatement(expression(SimpleName(identifier(*id)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(NumberLiteral(token(*0)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(NumberLiteral(token(*0)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*h)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(SimpleName(identifier(*start)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*w)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(QualifiedName(qualifier(SimpleName(identifier(*System))))(name(SimpleName(identifier(*err))))))(name(SimpleName(identifier(*println)))))))))
(MethodDeclaration(name(SimpleName(identifier(*parseColor))))(body(Block(statements(ReturnStatement(expression(MethodInvocation(name(SimpleName(identifier(*parseColor)))))))))))
(MethodDeclaration(name(SimpleName(identifier(*generateElement))))(body(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setAttribute)))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(NumberLiteral(token(*0)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(NumberLiteral(token(*0)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*start)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setX)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setY)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*moveTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*quadTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*quadTo)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*lineTo)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*firePropertyChange))))(arguments(SimpleName(identifier(*oldValue)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getGraphics))))))(name(SimpleName(identifier(*drawRect)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*point))))(name(SimpleName(identifier(*setX)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(SimpleName(identifier(*start)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*w)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*start)))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*Point))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*previousTranslate))))(initializer(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getTranslate)))))))))(TryStatement(body(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(MethodInvocation(name(SimpleName(identifier(*getScale))))))))))))(finally(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(SimpleName(identifier(*previousScale)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))(arguments(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*x)))))(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*y)))))))))))))))
(Block(statements(IfStatement(expression(MethodInvocation(expression(SimpleName(identifier(*mxUtils))))(name(SimpleName(identifier(*isTrue))))(arguments(MethodInvocation(expression(SimpleName(identifier(*state))))(name(SimpleName(identifier(*getStyle)))))(QualifiedName(qualifier(SimpleName(identifier(*mxConstants))))(name(SimpleName(identifier(*STYLE_HORIZONTAL)))))(BooleanLiteral(booleanValue(*true)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*log))))(name(SimpleName(identifier(*log))))(arguments(QualifiedName(qualifier(SimpleName(identifier(*Level))))(name(SimpleName(identifier(*SEVERE)))))(SimpleName(identifier(*e)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*begin)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*stroke)))))))))
(Block(statements(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*double))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*w))))(initializer(MethodInvocation(expression(SimpleName(identifier(*state))))(name(SimpleName(identifier(*getWidth)))))))))(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*double))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*h))))(initializer(MethodInvocation(expression(SimpleName(identifier(*state))))(name(SimpleName(identifier(*getHeight)))))))))))
(MethodDeclaration(name(SimpleName(identifier(*toString))))(body(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*StringBuilder))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*builder))))(initializer(ClassInstanceCreation(type(SimpleType(name(SimpleName(identifier(*StringBuilder)))))))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append))))(arguments(MethodInvocation(expression(MethodInvocation(name(SimpleName(identifier(*getClass))))))(name(SimpleName(identifier(*getSimpleName)))))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append))))(arguments(StringLiteral(escapedValue(*" [")))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*append))))(arguments(StringLiteral(escapedValue(*"]")))))))(ReturnStatement(expression(MethodInvocation(expression(SimpleName(identifier(*builder))))(name(SimpleName(identifier(*toString)))))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*Point))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*previousTranslate))))(initializer(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getTranslate)))))))))(TryStatement(body(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))))))))(finally(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(SimpleName(identifier(*previousScale)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate))))(arguments(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*x)))))(QualifiedName(qualifier(SimpleName(identifier(*previousTranslate))))(name(SimpleName(identifier(*y)))))))))))))))
(Block(statements(IfStatement(expression(InfixExpression(leftOperand(SimpleName(identifier(*nl))))(operator(*!=))(rightOperand(NullLiteral(token(*null))))))(thenStatement(Block(statements(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*int))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*length))))(initializer(MethodInvocation(expression(SimpleName(identifier(*nl))))(name(SimpleName(identifier(*getLength)))))))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*node))))(name(SimpleName(identifier(*appendChild)))))))))
(MethodDeclaration(name(SimpleName(identifier(*generateElement))))(body(Block(statements(IfStatement(expression(PrefixExpression(operator(*!))(operand(MethodInvocation(name(SimpleName(identifier(*equals))))(arguments(StringLiteral(escapedValue(*""))))))))(thenStatement(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setAttribute)))))))))))(IfStatement(expression(PrefixExpression(operator(*!))(operand(MethodInvocation(name(SimpleName(identifier(*equals))))(arguments(StringLiteral(escapedValue(*""))))))))(thenStatement(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setAttribute)))))))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(QualifiedName(qualifier(SimpleName(identifier(*System))))(name(SimpleName(identifier(*out))))))(name(SimpleName(identifier(*println)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*point))))(name(SimpleName(identifier(*setY)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*cells))))(name(SimpleName(identifier(*add))))(arguments(MethodInvocation(name(SimpleName(identifier(*getCell)))))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*mxPoint))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*previousTranslate))))(initializer(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*getTranslate)))))))))(TryStatement(body(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(MethodInvocation(name(SimpleName(identifier(*getScale))))))))))))(finally(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setScale))))(arguments(SimpleName(identifier(*previousScale)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*canvas))))(name(SimpleName(identifier(*setTranslate)))))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setAttribute)))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*appendChild)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*edge))))(name(SimpleName(identifier(*setAttribute)))))))))
(Block(statements(IfStatement(expression(MethodInvocation(expression(MethodInvocation(name(SimpleName(identifier(*getNodeName))))))(name(SimpleName(identifier(*equals)))))))))
(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*String))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*val)))))))(ReturnStatement(expression(SimpleName(identifier(*val)))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(SimpleName(identifier(*start)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(NumberLiteral(token(*0)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*e))))(name(SimpleName(identifier(*printStackTrace)))))))))
(Block(statements(IfStatement(expression(InfixExpression(leftOperand(SimpleName(identifier(*opacity))))(operator(*!=))(rightOperand(NumberLiteral(token(*100))))))(thenStatement(Block(statements(VariableDeclarationStatement(type(SimpleType(name(SimpleName(identifier(*String))))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*value))))(initializer(MethodInvocation(expression(SimpleName(identifier(*String))))(name(SimpleName(identifier(*valueOf))))(arguments(InfixExpression(leftOperand(SimpleName(identifier(*opacity))))(operator(*/))(rightOperand(NumberLiteral(token(*100)))))))))))(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*setAttribute))))(arguments(SimpleName(identifier(*value)))))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(name(SimpleName(identifier(*translate))))(arguments(MethodInvocation(name(SimpleName(identifier(*getX)))))(MethodInvocation(name(SimpleName(identifier(*getY)))))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*fillAndStroke)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(SimpleName(identifier(*start)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*h)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*start)))))))))
(Block(statements(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*double))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*cos)))))))(VariableDeclarationStatement(type(PrimitiveType(primitiveTypeCode(*double))))(fragments(VariableDeclarationFragment(name(SimpleName(identifier(*sin)))))))))
(Block(statements(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*moveTo))))(arguments(SimpleName(identifier(*start)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(NumberLiteral(token(*0)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo)))))))(ExpressionStatement(expression(MethodInvocation(expression(SimpleName(identifier(*c))))(name(SimpleName(identifier(*lineTo))))(arguments(SimpleName(identifier(*start)))))))))
